---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  selector:
    app: postgres
  ports:
    - name: pgsql
      port: 5432
      targetPort: 5432
    - name: http
      port: 8080
      targetPort: 8080
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: rhdevelopers/openshift-pgsql12-primary:centos7-monitoring
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "1Gi"
              cpu: "500m"
          ports:
            - name: tcp
              containerPort: 5432
          env:
            - name: PG_USER_PASSWORD
              value: password!
            - name: PG_USER_NAME
              value: demo
            - name: PG_DATABASE
              value: gamedb
            - name: PG_NETWORK_MASK
              value: all
            - name: PG_MAX_CONNECTIONS
              value: "100"
            - name: PG_SHARED_BUFFERS
              value: "256"
            - name: PG_WORK_MEM
              value: "1536"
            - name: PG_EFFECTIVE_CACHE_SIZE
              value: "1"
            - name: PG_EFFECTIVE_IO
              value: "128"
            - name: PG_MAX_WAL_SIZE
              value: "1"
          volumeMounts:
            - mountPath: /pgdata
              name: pgdata
            - mountPath: /pgwal
              name: pgwal
        - name: client
          image: rhdevelopers/openshift-pgsql12-primary:centos7-clients
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: PG_USER_PASSWORD
              value: password!
            - name: PG_USER_NAME
              value: demo
            - name: PG_DATABASE
              value: gamedb
            - name: PG_HOST
              value: localhost
          volumeMounts:
            - mountPath: /opt/sql
              name: appsql
            - mountPath: /pgdata
              name: pgdata
              readOnly: true
      volumes:
        - name: appsql
          configMap:
            name: appsql
            items:
              - key: schema.sql
                path: schemas/schema.sql
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata-pvc
        - name: pgwal
          persistentVolumeClaim:
            claimName: pgwal-pvc
