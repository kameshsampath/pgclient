#!/bin/bash
# The MIT License (MIT)
#
# Copyright (c) 2019 Jesper Pedersen <jesper.pedersen@redhat.com>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the Software
# is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

REGEX_IDENTIFIER='^[a-zA-Z_][a-zA-Z0-9_]*$'
REGEX_PASSWORD='^[a-zA-Z0-9_~!@#$%^&*()-=<>,.?;:|]+$'
REGEX_NUMBER='^[1-9][0-9]*$'

function usage() {
  if [ $# == 1 ]; then
    echo >&2 "error: $1"
  fi

  cat >&2 <<EOF
Required environment variables:
  PG_DATABASE ($PG_DATABASE) (regex: '$REGEX_IDENTIFIER')
  PG_USER_NAME ($PG_USER_NAME) (regex: '$REGEX_IDENTIFIER')
  PG_USER_PASSWORD ($PG_USER_PASSWORD) (regex: '$REGEX_PASSWORD')
  PG_HOST ($PG_HOST) (regex: '$REGEX_IDENTIFIER')
  PG_PORT ($PG_PORT) (regex: '$REGEX_NUMBER')

For more information visit https://github.com/jesperpedersen/openshift-pgsql
EOF
  exit 1
}

# Generate passwd file based on current uid
function generate_passwd_file() {
  export USER_ID=$(id -u)
  export GROUP_ID=$(id -g)
  grep -v ^postgres /etc/passwd > "$HOME/passwd"
  echo "postgres:x:${USER_ID}:${GROUP_ID}:PostgreSQL Server:/pgdata:/bin/bash" >> "$HOME/passwd"
  export LD_PRELOAD='/usr/lib64/libnss_wrapper.so'
  export NSS_WRAPPER_PASSWD=$HOME/passwd
  export NSS_WRAPPER_GROUP=/etc/group
}

generate_passwd_file


if [ -z "${PG_DATABASE}" ] ||
    [ -z "${PG_USER_NAME}" ] || [ -z "${PG_USER_PASSWORD}" ] ||
    [ -z "${PG_HOST}" ]; then
    echo "PG_DATABASE, PG_USER_NAME, PG_USER_PASSWORD and PG_HOST needs to be defined."
    exit 1
fi

[[ "${PG_DATABASE}" =~ $REGEX_IDENTIFIER ]] || usage
[[ "${PG_USER_NAME}" =~ $REGEX_IDENTIFIER ]] || usage
[[ "${PG_USER_PASSWORD}" =~ $REGEX_PASSWORD ]] || usage

export PGHOST=${PG_HOST:-postgresql}
export PGPORT=${PG_PORT:-5432}
export PGUSER=${PG_USER_NAME}
export PGPASSWORD=${PG_USER_PASSWORD}
export PGDATABASE=${PG_DATABASE}

function generate_pgpass_file() {
  echo "${PGHOST}:${PGPORT}:${PGDATABASE}:${PGUSER}:${PGPASSWORD}" >> "$HOME/.pgpass"
  chmod 0600 "$HOME/.pgpass"
}

generate_pgpass_file

exec "$@"